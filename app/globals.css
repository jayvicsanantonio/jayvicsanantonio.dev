@import 'tailwindcss';

@custom-variant dark (&:where(.dark, .dark *));

@theme {
  --font-source-sans: var(--font-source-sans);
  --font-oswald: var(--font-oswald);
  /* optional, kept for clarity if needed elsewhere */
  --font-inter-tight: var(--font-inter-tight);

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
  @media (width >= --theme(--breakpoint-sm)) {
    max-width: none;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer base {
  :root {
    scroll-behavior: smooth;

    --background: 0 0% 100%;
    --foreground: 224 71.4% 4.1%;

    --card: 0 0% 100%;
    --card-foreground: 224 71.4% 4.1%;

    --popover: 0 0% 100%;
    --popover-foreground: 224 71.4% 4.1%;

    --primary: 220.9 39.3% 11%;
    --primary-foreground: 210 20% 98%;

    --secondary: 220 14.3% 95.9%;
    --secondary-foreground: 220.9 39.3% 11%;

    --muted: 220 14.3% 95.9%;
    --muted-foreground: 220 8.9% 46.1%;

    --accent: 220 14.3% 95.9%;
    --accent-foreground: 220.9 39.3% 11%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 20% 98%;

    --border: 220 13% 91%;
    --input: 220 13% 91%;
    --ring: 224 71.4% 4.1%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 224 71.4% 4.1%;
    --foreground: 210 20% 98%;

    --card: 224 71.4% 4.1%;
    --card-foreground: 210 20% 98%;

    --popover: 224 71.4% 4.1%;
    --popover-foreground: 210 20% 98%;

    --primary: 210 20% 98%;
    --primary-foreground: 220.9 39.3% 11%;

    --secondary: 215 27.9% 16.9%;
    --secondary-foreground: 210 20% 98%;

    --muted: 215 27.9% 16.9%;
    --muted-foreground: 217.9 10.6% 64.9%;

    --accent: 215 27.9% 16.9%;
    --accent-foreground: 210 20% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 20% 98%;

    --border: 215 27.9% 16.9%;
    --input: 215 27.9% 16.9%;
    --ring: 216 12.2% 83.9%;
  }

  .content-visibility-auto {
    content-visibility: auto;
  }

  p.hyphenate {
    overflow-wrap: break-word;
    hyphens: auto;

    /* Prefix for Safari */
    -webkit-hyphens: auto;
  }

  /* For Holiday Season Only */
  @keyframes lights {
    0% {
      opacity: 0;
    }

    30% {
      opacity: 0;
    }

    40% {
      opacity: 1;
    }

    90% {
      opacity: 1;
    }

    100% {
      opacity: 0;
    }
  }

  .lit {
    animation: 2s linear infinite lights;

    &.yellow {
      animation-delay: 0.5s;
    }

    &.blue {
      animation-delay: 1s;
    }

    &.red {
      animation-delay: 1.5s;
    }
  }

  .lights {
    align-items: top;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
    position: absolute;
    inset-inline: 0;

    &.top {
      top: 52px;
    }

    & svg {
      display: block;
      width: 100%;
    }

    & svg:nth-child(2) ~ svg {
      display: none;

      @media (min-width: 400px) {
        display: block;
      }
    }

    & svg:nth-child(3) ~ svg {
      display: none;

      @media (min-width: 500px) {
        display: block;
      }
    }

    & svg:nth-child(4) ~ svg {
      display: none;

      @media (min-width: 600px) {
        display: block;
      }
    }
  }

  #lights-def {
    display: block;
    width: 0;
    height: 0;
    overflow: hidden;
  }

  /* Homepage animations */
  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes spin-slow {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  .animate-fade-in-up {
    animation: fade-in-up 0.8s ease-out forwards;
    opacity: 0;
  }

  .animate-spin-slow {
    animation: spin-slow 8s linear infinite;
  }

  /* Smooth scrolling and performance optimizations */
  html {
    scroll-behavior: smooth;
  }

  /* Scroll-based animations will use transform for better performance */
  .scroll-element {
    will-change: transform, opacity;
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 8px;
  }

  ::-webkit-scrollbar-track {
    background: rgba(0, 0, 0, 0.1);
  }

  ::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.3);
    border-radius: 4px;
  }

  ::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.5);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground antialiased;
  }
}

/*
  ---break---
*/

@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground antialiased;
  }
}

/* Cursor focus ring on interactive elements */
@layer utilities {
  .focus-ring {
    @apply focus:outline-hidden focus:ring-2 focus:ring-blue-400/60 focus:ring-offset-2 focus:ring-offset-background;
  }
}

/* Homepage nav bounce animation (moved from app/page.tsx) */
.nav-bouncy {
  will-change: transform;
}
.nav-bouncy:hover {
  animation: nav-bounce 440ms cubic-bezier(0.22, 1, 0.36, 1);
}
.nav-bouncy:active {
  animation: nav-bounce-tap 260ms cubic-bezier(0.22, 1, 0.36, 1);
}
@keyframes nav-bounce {
  0% {
    transform: translate(-50%, -50%) scale(1);
  }
  45% {
    transform: translate(-50%, -50%) scale(1.16);
  }
  75% {
    transform: translate(-50%, -50%) scale(0.94);
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
  }
}
@keyframes nav-bounce-tap {
  0% {
    transform: translate(-50%, -50%) scale(1);
  }
  50% {
    transform: translate(-50%, -50%) scale(0.92);
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
  }
}
